name: backend

on:
  push:
    branches:
      - main
    paths:
      - backend/*
      - .github/workflows/backend.yml
  workflow_dispatch:

env:
  BUILD_VERSION: "git"
  DOCKER_CLI_EXPERIMENTAL: enabled
  REPOSITORY: ${{ github.actor }}/koj-${{ github.workflow }}

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

jobs:
  deploy:
    strategy:
      fail-fast: true
    runs-on: ubuntu-20.04

    steps:
      - name: Source checkout
        uses: actions/checkout@v2

      - name: Setup Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Set Docker metadata
        id: docker_meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REPOSITORY }}
          labels: |
            org.opencontainers.image.version=${{ env.BUILD_VERSION }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.title=${{ env.REPOSITORY }}
      - name: GitHub login
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: DockerHub login
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Checkout submodules
        run: git submodule update --init --recursive

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          push: ${{ github.event_name != 'pull_request' }}
          context: .
          file: ${{ github.workflow }}.Dockerfile
          platforms: linux/amd64,linux/arm64
          build-args: BUILD_VERSION
          labels: ${{ steps.docker_meta.outputs.labels }}
          tags: |
            docker.io/${{ env.REPOSITORY }}:latest
            ghcr.io/${{ env.REPOSITORY }}:latest