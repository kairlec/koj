/*
 * This file is generated by jOOQ.
 */
package com.kairlec.koj.dao.tables.records;


import com.kairlec.koj.dao.tables.User;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * 用户表
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserRecord extends UpdatableRecordImpl<UserRecord> implements Record7<Long, String, String, String, Byte, LocalDateTime, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>koj.user.id</code>. 用户id
     */
    public UserRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>koj.user.id</code>. 用户id
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>koj.user.username</code>. 用户名
     */
    public UserRecord setUsername(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>koj.user.username</code>. 用户名
     */
    public String getUsername() {
        return (String) get(1);
    }

    /**
     * Setter for <code>koj.user.password</code>. 密码(脱敏后)
     */
    public UserRecord setPassword(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>koj.user.password</code>. 密码(脱敏后)
     */
    public String getPassword() {
        return (String) get(2);
    }

    /**
     * Setter for <code>koj.user.email</code>. 用户邮箱
     */
    public UserRecord setEmail(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>koj.user.email</code>. 用户邮箱
     */
    public String getEmail() {
        return (String) get(3);
    }

    /**
     * Setter for <code>koj.user.type</code>. 用户类型: 0-普通用户, 1-管理员
     */
    public UserRecord setType(Byte value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>koj.user.type</code>. 用户类型: 0-普通用户, 1-管理员
     */
    public Byte getType() {
        return (Byte) get(4);
    }

    /**
     * Setter for <code>koj.user.create_time</code>. 创建时间
     */
    public UserRecord setCreateTime(LocalDateTime value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>koj.user.create_time</code>. 创建时间
     */
    public LocalDateTime getCreateTime() {
        return (LocalDateTime) get(5);
    }

    /**
     * Setter for <code>koj.user.update_time</code>. 更新时间
     */
    public UserRecord setUpdateTime(LocalDateTime value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>koj.user.update_time</code>. 更新时间
     */
    public LocalDateTime getUpdateTime() {
        return (LocalDateTime) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<Long, String, String, String, Byte, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<Long, String, String, String, Byte, LocalDateTime, LocalDateTime> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return User.USER.ID;
    }

    @Override
    public Field<String> field2() {
        return User.USER.USERNAME;
    }

    @Override
    public Field<String> field3() {
        return User.USER.PASSWORD;
    }

    @Override
    public Field<String> field4() {
        return User.USER.EMAIL;
    }

    @Override
    public Field<Byte> field5() {
        return User.USER.TYPE;
    }

    @Override
    public Field<LocalDateTime> field6() {
        return User.USER.CREATE_TIME;
    }

    @Override
    public Field<LocalDateTime> field7() {
        return User.USER.UPDATE_TIME;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getUsername();
    }

    @Override
    public String component3() {
        return getPassword();
    }

    @Override
    public String component4() {
        return getEmail();
    }

    @Override
    public Byte component5() {
        return getType();
    }

    @Override
    public LocalDateTime component6() {
        return getCreateTime();
    }

    @Override
    public LocalDateTime component7() {
        return getUpdateTime();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getUsername();
    }

    @Override
    public String value3() {
        return getPassword();
    }

    @Override
    public String value4() {
        return getEmail();
    }

    @Override
    public Byte value5() {
        return getType();
    }

    @Override
    public LocalDateTime value6() {
        return getCreateTime();
    }

    @Override
    public LocalDateTime value7() {
        return getUpdateTime();
    }

    @Override
    public UserRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public UserRecord value2(String value) {
        setUsername(value);
        return this;
    }

    @Override
    public UserRecord value3(String value) {
        setPassword(value);
        return this;
    }

    @Override
    public UserRecord value4(String value) {
        setEmail(value);
        return this;
    }

    @Override
    public UserRecord value5(Byte value) {
        setType(value);
        return this;
    }

    @Override
    public UserRecord value6(LocalDateTime value) {
        setCreateTime(value);
        return this;
    }

    @Override
    public UserRecord value7(LocalDateTime value) {
        setUpdateTime(value);
        return this;
    }

    @Override
    public UserRecord values(Long value1, String value2, String value3, String value4, Byte value5, LocalDateTime value6, LocalDateTime value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserRecord
     */
    public UserRecord() {
        super(User.USER);
    }

    /**
     * Create a detached, initialised UserRecord
     */
    public UserRecord(Long id, String username, String password, String email, Byte type, LocalDateTime createTime, LocalDateTime updateTime) {
        super(User.USER);

        setId(id);
        setUsername(username);
        setPassword(password);
        setEmail(email);
        setType(type);
        setCreateTime(createTime);
        setUpdateTime(updateTime);
    }

    /**
     * Create a detached, initialised UserRecord
     */
    public UserRecord(com.kairlec.koj.dao.tables.pojos.User value) {
        super(User.USER);

        if (value != null) {
            setId(value.getId());
            setUsername(value.getUsername());
            setPassword(value.getPassword());
            setEmail(value.getEmail());
            setType(value.getType());
            setCreateTime(value.getCreateTime());
            setUpdateTime(value.getUpdateTime());
        }
    }
}
