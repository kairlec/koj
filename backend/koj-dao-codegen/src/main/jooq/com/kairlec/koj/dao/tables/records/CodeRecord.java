/*
 * This file is generated by jOOQ.
 */
package com.kairlec.koj.dao.tables.records;


import com.kairlec.koj.dao.tables.Code;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * 代码表
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CodeRecord extends UpdatableRecordImpl<CodeRecord> implements Record3<Long, String, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>koj.code.id</code>. 代码id(和任务id一致)
     */
    public CodeRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>koj.code.id</code>. 代码id(和任务id一致)
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>koj.code.code</code>. 代码
     */
    public CodeRecord setCode(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>koj.code.code</code>. 代码
     */
    public String getCode() {
        return (String) get(1);
    }

    /**
     * Setter for <code>koj.code.create_time</code>. 创建时间
     */
    public CodeRecord setCreateTime(LocalDateTime value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>koj.code.create_time</code>. 创建时间
     */
    public LocalDateTime getCreateTime() {
        return (LocalDateTime) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Long, String, LocalDateTime> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Long, String, LocalDateTime> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Code.CODE.ID;
    }

    @Override
    public Field<String> field2() {
        return Code.CODE.CODE_;
    }

    @Override
    public Field<LocalDateTime> field3() {
        return Code.CODE.CREATE_TIME;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getCode();
    }

    @Override
    public LocalDateTime component3() {
        return getCreateTime();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getCode();
    }

    @Override
    public LocalDateTime value3() {
        return getCreateTime();
    }

    @Override
    public CodeRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public CodeRecord value2(String value) {
        setCode(value);
        return this;
    }

    @Override
    public CodeRecord value3(LocalDateTime value) {
        setCreateTime(value);
        return this;
    }

    @Override
    public CodeRecord values(Long value1, String value2, LocalDateTime value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CodeRecord
     */
    public CodeRecord() {
        super(Code.CODE);
    }

    /**
     * Create a detached, initialised CodeRecord
     */
    public CodeRecord(Long id, String code, LocalDateTime createTime) {
        super(Code.CODE);

        setId(id);
        setCode(code);
        setCreateTime(createTime);
    }

    /**
     * Create a detached, initialised CodeRecord
     */
    public CodeRecord(com.kairlec.koj.dao.tables.pojos.Code value) {
        super(Code.CODE);

        if (value != null) {
            setId(value.getId());
            setCode(value.getCode());
            setCreateTime(value.getCreateTime());
        }
    }
}
