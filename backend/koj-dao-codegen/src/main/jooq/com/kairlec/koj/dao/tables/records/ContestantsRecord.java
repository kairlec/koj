/*
 * This file is generated by jOOQ.
 */
package com.kairlec.koj.dao.tables.records;


import com.kairlec.koj.dao.tables.Contestants;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * 参赛者关系表
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ContestantsRecord extends UpdatableRecordImpl<ContestantsRecord> implements Record4<Long, Long, LocalDateTime, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>koj.contestants.user_id</code>. 用户id
     */
    public ContestantsRecord setUserId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>koj.contestants.user_id</code>. 用户id
     */
    public Long getUserId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>koj.contestants.competition_id</code>. 比赛id
     */
    public ContestantsRecord setCompetitionId(Long value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>koj.contestants.competition_id</code>. 比赛id
     */
    public Long getCompetitionId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>koj.contestants.create_time</code>. 创建时间
     */
    public ContestantsRecord setCreateTime(LocalDateTime value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>koj.contestants.create_time</code>. 创建时间
     */
    public LocalDateTime getCreateTime() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>koj.contestants.update_time</code>. 更新时间
     */
    public ContestantsRecord setUpdateTime(LocalDateTime value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>koj.contestants.update_time</code>. 更新时间
     */
    public LocalDateTime getUpdateTime() {
        return (LocalDateTime) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<Long, Long> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Long, Long, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Long, Long, LocalDateTime, LocalDateTime> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Contestants.CONTESTANTS.USER_ID;
    }

    @Override
    public Field<Long> field2() {
        return Contestants.CONTESTANTS.COMPETITION_ID;
    }

    @Override
    public Field<LocalDateTime> field3() {
        return Contestants.CONTESTANTS.CREATE_TIME;
    }

    @Override
    public Field<LocalDateTime> field4() {
        return Contestants.CONTESTANTS.UPDATE_TIME;
    }

    @Override
    public Long component1() {
        return getUserId();
    }

    @Override
    public Long component2() {
        return getCompetitionId();
    }

    @Override
    public LocalDateTime component3() {
        return getCreateTime();
    }

    @Override
    public LocalDateTime component4() {
        return getUpdateTime();
    }

    @Override
    public Long value1() {
        return getUserId();
    }

    @Override
    public Long value2() {
        return getCompetitionId();
    }

    @Override
    public LocalDateTime value3() {
        return getCreateTime();
    }

    @Override
    public LocalDateTime value4() {
        return getUpdateTime();
    }

    @Override
    public ContestantsRecord value1(Long value) {
        setUserId(value);
        return this;
    }

    @Override
    public ContestantsRecord value2(Long value) {
        setCompetitionId(value);
        return this;
    }

    @Override
    public ContestantsRecord value3(LocalDateTime value) {
        setCreateTime(value);
        return this;
    }

    @Override
    public ContestantsRecord value4(LocalDateTime value) {
        setUpdateTime(value);
        return this;
    }

    @Override
    public ContestantsRecord values(Long value1, Long value2, LocalDateTime value3, LocalDateTime value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ContestantsRecord
     */
    public ContestantsRecord() {
        super(Contestants.CONTESTANTS);
    }

    /**
     * Create a detached, initialised ContestantsRecord
     */
    public ContestantsRecord(Long userId, Long competitionId, LocalDateTime createTime, LocalDateTime updateTime) {
        super(Contestants.CONTESTANTS);

        setUserId(userId);
        setCompetitionId(competitionId);
        setCreateTime(createTime);
        setUpdateTime(updateTime);
    }

    /**
     * Create a detached, initialised ContestantsRecord
     */
    public ContestantsRecord(com.kairlec.koj.dao.tables.pojos.Contestants value) {
        super(Contestants.CONTESTANTS);

        if (value != null) {
            setUserId(value.getUserId());
            setCompetitionId(value.getCompetitionId());
            setCreateTime(value.getCreateTime());
            setUpdateTime(value.getUpdateTime());
        }
    }
}
